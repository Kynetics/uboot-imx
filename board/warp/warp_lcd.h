/*
 * Copyright (C) 2014 Revolution Robotics, Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 * MA 02111-1307 USA
 */

#ifndef WARP_MX6SL_ELCDIF
#define WARP_MX6SL_ELCDIF

#define REGS_LCDIF_BASE			0x20f8000
#define HW_LCDIF_CTRL			0x0000
#define HW_LCDIF_CTRL_SET		0x0004
#define HW_LCDIF_CTRL_CLR		0x0008
#define HW_LCDIF_CTRL_TOG		0x000C
#define HW_LCDIF_CTRL1			0x0010
#define HW_LCDIF_CTRL1_SET		0x0014
#define HW_LCDIF_CTRL1_CLR		0x0018
#define HW_LCDIF_CTRL1_TOG		0x001C
#define HW_LCDIF_CTRL2			0x0020
#define HW_LCDIF_CTRL2_SET		0x0024
#define HW_LCDIF_CTRL2_CLR		0x0028
#define HW_LCDIF_CTRL2_TOG		0x002C
#define HW_LCDIF_TRANSFER_COUNT		0x0030
#define HW_LCDIF_CUR_BUF		0x0040
#define HW_LCDIF_NEXT_BUF		0x0050
#define HW_LCDIF_TIMING			0x0060

#define HW_LCDIF_VDCTRL0		0x0070
#define HW_LCDIF_VDCTRL0_SET		0x0074
#define HW_LCDIF_VDCTRL0_CLR		0x0078
#define HW_LCDIF_VDCTRL0_TOG		0x007C
#define HW_LCDIF_VDCTRL1		0x0080
#define HW_LCDIF_VDCTRL2		0x0090
#define HW_LCDIF_VDCTRL3		0x00A0
#define HW_LCDIF_VDCTRL4		0x00B0

#define HW_LCDIF_DATA			0x0180
#define HW_LCDIF_BM_ERROR_STAT		0x0190
#define HW_LCDIF_CRC_STAT		0x01A0
#define HW_LCDIF_STAT			0x01B0
#define HW_LCDIF_VERSION		0x01C0
#define HW_LCDIF_DEBUG0			0x01D0
#define HW_LCDIF_DEBUG1			0x01E0
#define HW_LCDIF_DEBUG2			0x01F0
#define HW_LCDIF_THRESH			0x0200

#define BM_LCDIF_CTRL_SFTRST			(1 << 31)
#define BM_LCDIF_CTRL_CLKGATE			(1 << 30)
#define BM_LCDIF_CTRL_DVI_MODE			(1 << 20)
#define BM_LCDIF_CTRL_BYPASS_COUNT		(1 << 19)
#define BM_LCDIF_CTRL_VSYNC_MODE		(1 << 18)
#define BM_LCDIF_CTRL_DOTCLK_MODE		(1 << 17)
#define BM_LCDIF_CTRL_DATA_SELECT		(1 << 16)

#define BP_LCDIF_CTRL_INPUT_DATA_SWIZZLE	14
#define BM_LCDIF_CTRL_INPUT_DATA_SWIZZLE	0x0000C000
#define BF_LCDIF_CTRL_INPUT_DATA_SWIZZLE(v) (((v) << 14) & BM_LCDIF_CTRL_INPUT_DATA_SWIZZLE)
#define BV_LCDIF_CTRL_INPUT_DATA_SWIZZLE__NO_SWAP         0x0
#define BV_LCDIF_CTRL_INPUT_DATA_SWIZZLE__LITTLE_ENDIAN   0x0
#define BV_LCDIF_CTRL_INPUT_DATA_SWIZZLE__BIG_ENDIAN_SWAP 0x1
#define BV_LCDIF_CTRL_INPUT_DATA_SWIZZLE__SWAP_ALL_BYTES  0x1
#define BV_LCDIF_CTRL_INPUT_DATA_SWIZZLE__HWD_SWAP        0x2
#define BV_LCDIF_CTRL_INPUT_DATA_SWIZZLE__HWD_BYTE_SWAP   0x3
#define BP_LCDIF_CTRL_CSC_DATA_SWIZZLE	12
#define BM_LCDIF_CTRL_CSC_DATA_SWIZZLE	0x00003000
#define BF_LCDIF_CTRL_CSC_DATA_SWIZZLE(v) (((v) << 12) & BM_LCDIF_CTRL_CSC_DATA_SWIZZLE)
#define BV_LCDIF_CTRL_CSC_DATA_SWIZZLE__NO_SWAP         0x0
#define BV_LCDIF_CTRL_CSC_DATA_SWIZZLE__LITTLE_ENDIAN   0x0
#define BV_LCDIF_CTRL_CSC_DATA_SWIZZLE__BIG_ENDIAN_SWAP 0x1
#define BV_LCDIF_CTRL_CSC_DATA_SWIZZLE__SWAP_ALL_BYTES  0x1
#define BV_LCDIF_CTRL_CSC_DATA_SWIZZLE__HWD_SWAP        0x2
#define BV_LCDIF_CTRL_CSC_DATA_SWIZZLE__HWD_BYTE_SWAP   0x3

#define BM_LCDIF_CTRL_NUM_BITS			(31 << 21)
#define BF_LCDIF_CTRL_SHIFT_NUM_BITS(x)		(((x) << 21) & BM_LCDIF_CTRL_NUM_BITS)
#define BP_LCDIF_CTRL_LCD_DATABUS_WIDTH		10
#define BM_LCDIF_CTRL_LCD_DATABUS_WIDTH		0x00000C00
#define BF_LCDIF_CTRL_LCD_DATABUS_WIDTH(v) 	(((v) << 10) & BM_LCDIF_CTRL_LCD_DATABUS_WIDTH)
#define BV_LCDIF_CTRL_LCD_DATABUS_WIDTH__16_BIT 0x0
#define BV_LCDIF_CTRL_LCD_DATABUS_WIDTH__8_BIT  0x1
#define BV_LCDIF_CTRL_LCD_DATABUS_WIDTH__18_BIT 0x2
#define BV_LCDIF_CTRL_LCD_DATABUS_WIDTH__24_BIT 0x3
#define BP_LCDIF_CTRL_WORD_LENGTH		8
#define BM_LCDIF_CTRL_WORD_LENGTH		0x00000300
#define BF_LCDIF_CTRL_WORD_LENGTH(v) 		(((v) << 8) & BM_LCDIF_CTRL_WORD_LENGTH)
#define BV_LCDIF_CTRL_WORD_LENGTH__16_BIT 	0x0
#define BV_LCDIF_CTRL_WORD_LENGTH__8_BIT  	0x1
#define BV_LCDIF_CTRL_WORD_LENGTH__18_BIT 	0x2
#define BV_LCDIF_CTRL_WORD_LENGTH__24_BIT 	0x3
#define BM_LCDIF_CTRL_LCDIF_MASTER		(1 << 5)
#define BM_LCDIF_CTRL_DATA_FORMAT_16_BIT	(1 << 3)
#define BM_LCDIF_CTRL_DATA_FORMAT_18_BIT	(1 << 2)
#define BV_LCDIF_CTRL_DATA_FORMAT_18_BIT__LOWER_18_BITS_VALID 0x0
#define BV_LCDIF_CTRL_DATA_FORMAT_18_BIT__UPPER_18_BITS_VALID 0x1
#define BM_LCDIF_CTRL_DATA_FORMAT_24_BIT	(1 << 1)
#define BV_LCDIF_CTRL_DATA_FORMAT_24_BIT__ALL_24_BITS_VALID          0x0
#define BV_LCDIF_CTRL_DATA_FORMAT_24_BIT__DROP_UPPER_2_BITS_PER_BYTE 0x1
#define BM_LCDIF_CTRL_RUN 			(1 << 0)

#define BM_LCDIF_CTRL1_COMBINE_MPU_WR_STRB 	(1 << 27)

#define BM_LCDIF_CTRL1_BM_ERROR_IRQ_EN		(1 << 26)
#define BM_LCDIF_CTRL1_BM_ERROR_IRQ		(1 << 25)

#define BM_LCDIF_CTRL1_OVERFLOW_IRQ_EN		(1 << 15)
#define BM_LCDIF_CTRL1_UNDERFLOW_IRQ_EN		(1 << 14)
#define BM_LCDIF_CTRL1_CUR_FRAME_DONE_EN	(1 << 13)
#define BM_LCDIF_CTRL1_VSYNC_EDGE_IRQ_EN	(1 << 12)

#define BP_LCDIF_CTRL1_BYTE_PACKING_FORMAT	16
#define BM_LCDIF_CTRL1_BYTE_PACKING_FORMAT	0x000F0000
#define BF_LCDIF_CTRL1_BYTE_PACKING_FORMAT(v) 	(((v) << 16) & BM_LCDIF_CTRL1_BYTE_PACKING_FORMAT)
#define BM_LCDIF_CTRL1_MODE86			(1 << 1)

#define BP_LCDIF_TRANSFER_COUNT_V_COUNT	16
#define BM_LCDIF_TRANSFER_COUNT_V_COUNT	0xFFFF0000
#define BF_LCDIF_TRANSFER_COUNT_V_COUNT(v) \
(((v) << 16) & BM_LCDIF_TRANSFER_COUNT_V_COUNT)
#define BP_LCDIF_TRANSFER_COUNT_H_COUNT	0
#define BM_LCDIF_TRANSFER_COUNT_H_COUNT	0x0000FFFF
#define BF_LCDIF_TRANSFER_COUNT_H_COUNT(v)  \
(((v) << 0) & BM_LCDIF_TRANSFER_COUNT_H_COUNT)

#define BP_LCDIF_TIMING_CMD_HOLD	24
#define BM_LCDIF_TIMING_CMD_HOLD	0xFF000000
#define BF_LCDIF_TIMING_CMD_HOLD(v) \
(((v) << 24) & BM_LCDIF_TIMING_CMD_HOLD)
#define BP_LCDIF_TIMING_CMD_SETUP	16
#define BM_LCDIF_TIMING_CMD_SETUP	0x00FF0000
#define BF_LCDIF_TIMING_CMD_SETUP(v)  \
(((v) << 16) & BM_LCDIF_TIMING_CMD_SETUP)
#define BP_LCDIF_TIMING_DATA_HOLD	8
#define BM_LCDIF_TIMING_DATA_HOLD	0x0000FF00
#define BF_LCDIF_TIMING_DATA_HOLD(v)  \
(((v) << 8) & BM_LCDIF_TIMING_DATA_HOLD)
#define BP_LCDIF_TIMING_DATA_SETUP	0
#define BM_LCDIF_TIMING_DATA_SETUP	0x000000FF
#define BF_LCDIF_TIMING_DATA_SETUP(v)  \
(((v) << 0) & BM_LCDIF_TIMING_DATA_SETUP)

#define BM_LCDIF_STAT_PRESENT		0x80000000
#define BM_LCDIF_STAT_DMA_REQ		0x40000000
#define BM_LCDIF_STAT_LFIFO_FULL	0x20000000
#define BM_LCDIF_STAT_LFIFO_EMPTY	0x10000000
#define BM_LCDIF_STAT_TXFIFO_FULL	0x08000000
#define BM_LCDIF_STAT_TXFIFO_EMPTY	0x04000000
#define BM_LCDIF_STAT_BUSY		0x02000000
#define BM_LCDIF_STAT_DVI_CURRENT_FIELD	0x01000000

void lcdif_init(void);
int lh154_init_panel(void);
void set_lcd_pads(void);

#endif // WARP_MX6SL_ELCDIF
